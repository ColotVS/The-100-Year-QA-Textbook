public class chapter_36 {
    //#36.1 Методы проектирования тестов — таблицы решений: Теория

    //План урока
    //Идея таблиц решений
    //Как создавать таблицы решений
    //Анализ требований и сочетание таблиц решений с другими методами проектирования тестов


    //Идея таблиц решений

    //Проблема сложной бизнес-логики

    //До сих пор мы рассматривали случаи с довольно простой логикой.
    //Часто бизнес-логика системы бывает многократно сложнее, однако это не значит,
    //что полноценное тестирование таких приложений невозможно.

    //Для примера давайте немного переделаем требования предметной области приложения покупки авиабилетов и добавим систему скидок.

    //Введение

    //Компания «Авиастранствия» предоставляет услуги по бронированию авиабилетов.
    //У компании есть несколько отделений по всему миру.
    //Чтобы забронировать авиабилет, необходимо обратиться в ближайшее отделение.
    //Все операции, касающиеся билетов, в компании «Авиастранствия» выполняются вручную.
    //Но по мере роста количества клиентов на это уходит всё больше времени и усилий.
    //Поэтому было бы лучше использовать автоматизированную систему.

    //Приложение Flight Ticket Booking (FTB) представляет собой решение для покупки билетов на самолёт через Интернет.
    //У приложения будут такие функции, как составление расписания авиарейсов, поиск,
    //бронирование билетов для клиентов и проверка билетов. Система должна быть удобной для пользователей…

    //Предусмотрены следующие типы авиарейсов:
    //Внутренние рейсы.
    //Международные рейсы.

    //Предусмотрены следующие типы пассажиров:
    //Младенцы (0–2 лет).
    //Дети (2–16 лет).
    //Взрослые (старше 16 лет).
    //Постоянный клиент.

    //Скидки:
    //Для младенцев (внутренние рейсы): 80 %.
    //Для младенцев (международные рейсы): 70 %.
    //Для детей: 10 %.
    //Для детей при раннем бронировании: 20 %.
    //Для постоянных клиентов: 15 %.
    //Для постоянных клиентов при раннем бронировании: 20 %.
    //Для непостоянных клиентов при раннем бронировании: 10 %.
    //Межсезонная скидка на международные рейсы: 15 %.


    //В итоге у нас есть набор условий и различные действия, зависящие от комбинации условий.
    //Ниже приведена схема с некоторыми из этих условий:
    //https://mentorpiece.org/wp-content/uploads/articulate_uploads/the-100-year-qa-textbook-яussian-edition-1-0-2-xapi-QP0TAWc6/assets/IJlpiGvOO1Cfc20K_HgA2Qqq9Z4zXov1m.png

    //Схема выглядит довольно запутанной, даже несмотря на то, что в ней отсутствуют три и более комбинации условий.

    //Конечно, чтобы распутать клубок такой прикладной логики, нам нужен более мощный инструмент,
    //чем простая схема с прямоугольниками и стрелками.

    //Чтобы понять, в чём суть такого инструмента, нам нужно выполнить декомпозицию требований ещё раз.

    //В левой части приведённого выше рисунка показаны факторы, влияющие на результат.
    //Значение каждого из этих факторов может быть истинным или ложным,
    //и для некоторых из них возможны комбинации и одновременное влияние на результат.
    //Например:

    //Внутренний рейс + постоянный клиент + межсезонье + детский билет.

    //Международный рейс + младенец + раннее бронирование.

    //И т. д.

    //Список возможных результатов (различные скидки) показан в правой части рисунка.

    //Нам нужно собрать всё это в одну таблицу.


    //Шаги по созданию таблицы

    //Первый шаг: составьте список условий, объединяя те, которые исключают друг друга
    //(рейс может быть либо только внутренним, либо только международным).
    //Прежде чем начать, давайте вспомним требования.

    //Каждому столбцу присваивается имя "Правило №" (показаны как Пn).

    //Для младенцев (внутренние рейсы): 80 %.
    //Для младенцев (международные рейсы): 70 %.
    //Для детей: 10 %.
    //Для детей при раннем бронировании: 20 %.
    //Для постоянных клиентов: 15 %.
    //Для постоянных клиентов при раннем бронировании: 20 %.
    //Для непостоянных клиентов при раннем бронировании: 10 %.
    //Межсезонная скидка на международные рейсы: 15 %.

    //Условия	                П1      П2      П3      П4      П5      П6      П7      П8
    //Международные рейсы               да                                              да

    //Младенец                  да      да

    //Ребёнок                                   да      да

    //Взрослый

    //Постоянный клиент                                         да      да

    //Межсезонье                                                                        да

    //Ранее бронирование                                да              да      да

    //Действия

    //Скидка 10 %                               X                               X

    //Скидка 15 %                                               X                       X

    //Скидка 20 %                                       X               X

    //Скидка 70 %                       X

    //Скидка 80 %               X


    //Отметьте значимые условия надписью «истинно» или «да» или знаком «+», исходя из перечисленных выше требований:
    //Для младенцев (внутренний рейс): 80% - пассажир может быть младенцем или нет (истинно или ложно),
    //рейс может быть международным или нет (истинно или ложно).
    //Для младенцев (международный рейс): 70%.
    //Для детей: 10% - пассажир может быть ребенком или нет (истинно или ложно).
    //Для пассажира, являющегося ребенком, и раннего бронирования: 20% - может быть раннее бронирование или нет (истинно или ложно).
    //Для часто летающих пассажиров: 15% - пассажир может быть тем, кто часто летает или нет (истинно или ложно).
    //Для часто летающих пассажиров и раннего бронирования: 20%.
    //Для нечасто летающих пассажиров и раннего бронирования: 10%.
    //Межсезонная скидка на международные рейсы: 15% -истинно или ложно.

    //Мы перечислили всё, что есть в требованиях, поэтому этого пока что будет достаточно.

    //Теперь нужно добавить в таблицу результаты, отметив необходимые знаком X.

    //Что со этим всем делать?


    //Как создавать таблицы решений

    //В таблицах принятия решений результаты называют действиями.

    //Легко догадаться, что каждое правило соответствует одному позитивному тесту, служащему для покрытия функций приложения.
    //По сути мы создали 8 позитивных тест-кейсов.

    //1 - Младенец на внутреннем рейсе. Ожидаемый результат: скидка 80 %.
    //2 - Младенец на международном рейсе. Ожидаемый результат: скидка 70 %.
    //3 - Ребёнок на внутреннем рейсе. Ожидаемый результат: скидка 10 %.
    //4 - Ребёнок на внутреннем рейсе при раннем бронировании. Ожидаемый результат: скидка 20 %.
    //5 - Взрослый постоянный клиент на внутреннем рейсе. Ожидаемый результат: скидка 15 %.
    //6 - Взрослый постоянный клиент на внутреннем рейсе при раннем бронировании. Ожидаемый результат: скидка 20 %.
    //7 - Взрослый обычный клиент на внутреннем рейсе при раннем бронировании. Ожидаемый результат: скидка 10 %.
    //8 - Взрослый обычный клиент на международном рейсе в межсезонье. Ожидаемый результат: скидка 15 %.

    //Опытный тестировщик может заметить, что этих 8-и тестов недостаточно, но формально мы покрыли первоначальные требования
    //и можем с чистой совестью назначить всем этим тестам высокий приоритет.


    //Итог:

    //Таблицы принятия решений – это способ представления сложной прикладной логики в виде формальной таблицы.
    //В таблицу входят условия (которые могут быть истинными или ложными) и
    //действия (ожидаемые результаты, получаемые исходя из комбинаций условий).

    //Каждая строка таблицы решений представляет собой правило.
    //Правила нумеруются и служат основой для будущих тест-кейсов.


    //Анализ требований и сочетание таблиц решений с другими методами проектирования тестов

    //Как расширить покрытие показанных выше требований?

    //Анализ требований

    //Давайте снова посмотрим на полученную таблицу решений.

    //Как уже было сказано, восемь правил покрывают существующие требования.
    //Но что насчёт случаев, которые остались непокрытыми? Примеры таких случаев следующие:

    //Младенец на внутреннем рейсе при раннем бронировании. Ожидаемый результат: ?..

    //Ребёнок на международном рейсе при раннем бронировании. Ожидаемый результат: ?..

    //Взрослый на внутреннем рейсе при раннем бронировании. Ожидаемый результат: ?..

    //Как вы видите, таблицы решений очень удобны для анализа требований и поиска того, что было упущено.


    //Различие между попарным тестированием и таблицами решений

    //Попарное тестирование применимо для набора равноценных параметров с различными значениями.
    //Невозможные комбинации являются исключениями, а не правилами.
    //Напротив, таблицы решений подразумевают, что параметры могут быть неравнозначными, их комбинации подчиняются сложной логике,
    //а невозможные комбинации, наоборот, являются правилами (как в приведённом выше примере).


    //Сочетание таблиц решений с классами эквивалентности и граничными значениями

    //Как и в случае с другими методами, таблицы решений можно сочетать с классами эквивалентности и граничными значениями,
    //но только в обратном порядке.
    //Лучше вначале совместно применить методы, а уже потом создавать тест-кейсы.

    //1 - Проанализируйте прикладную логику.

    //2 - Создайте таблицу решений, как описано выше.

    //3 - Расширьте таблицу с целью покрытия того, что было упущено, после обсуждения с заинтересованными лицами.

    //4 - На основе таблицы решений определите классы эквивалентности
    //(в нашем примере это: младенец, взрослый, ребёнок, межсезонье, пик сезона,
    //постоянный клиент, обычный клиент, раннее и позднее бронирование).

    //5 - Для каждого класса эквивалентности возьмите по одному значению из середины диапазона.

    //6 - Определите граничные значения. Обязательно определите ожидаемые результаты для каждого из них.

    //7 - Используя алгоритм, описанный в соответствующей главе, добавьте тест-кейсы для граничных значений и значений вокруг них.

    //В нашем случае, очевидно, для комбинации таблиц решений с классами эквивалентности и границами нужно составить таблицу,
    //после чего понять, как в системе определяются понятия, включенные в таблицу решений,
    //и сколько на самом деле тестов нужно провести, чтобы покрыть каждое правило.


    //Пример:

    //Составлена таблица решений.

    //Правило П2 определяет, что младенец на международном рейсе должен получить скидку 70%.

    //"Младенцем" система считает покупателя билета в возрасте от 0 до 2 лет.
    //Возраст считается путем вычитания даты рождения из даты рейса.
    //"Международным рейсом" система считает рейс, вылетающий из одной страны и прилетающий в другую.

    //Определим тесты для "младенца":
    //0 лет (граница) - дата рождения совпадает с датой рейса
    //1 год (внутри диапазона) - дата рейса минус дата рождения = 1 год
    //2 года (граница) - дата рейса минус дата рождения = ровно 2 года (день рождения в день рейса).

    //Соответственно, чтобы покрыть правило 2 (П2 в таблице решений), нам необходимо провести 3 теста:
    //0 лет (граница) - дата рождения совпадает с датой рейса, выбран рейс, вылетающий из одной страны и прилетающий в другую
    //1 год (внутри диапазона) - дата рейса минус дата рождения = 1 год, выбран рейс, вылетающий из одной страны и прилетающий в другую
    //2 года (граница) - дата рейса минус дата рождения = ровно 2 года (день рождения в день рейса),
    //выбран рейс, вылетающий из одной страны и прилетающий в другую

    //Легко заметить, что если второй параметр тоже будет давать нам разные значения и
    //тестов на каждое правило получится слишком много, можно применить и попарное тестирование.


    //Итог:

    //Таблица принятия решений — это хороший подход для анализа прикладной логики,
    //который может комбинироваться с другими методами тест-дизайна.

    //Применение таблиц решений и попарного тестирования различается. Решающий фактор в выборе - важность параметров.
    //Однако после применения таблиц решений для сокращения тестов на правило П можно применить попарное тестирование.


    //Результаты урока

    //Итак, что мы узнали о таблицах решений?

    //1
    //Метод таблиц решений применяется, когда нужно работать с условиями,
    //комбинации которых не равнозначны между собой и подчиняются сложной прикладной логике.

    //2
    //В таблицы решений входят условия и действия.
    //Каждое условие, которое выполняется согласно требованию или в рамках правила,
    //обозначается надписью «истинно» или «да» или знаком «+».
    //Каждое действие, подлежащее выполнению при заданных условиях, обозначается знаком «X».

    //3
    //Получаемые правила служат основой для тест-кейсов.

    //4
    //Таблицы решений можно комбинировать с другими методами тест-дизайна.

    //5
    //Таблицу решений можно взять за основу для анализа упущенных элементов в требованиях.
}
