public class chapter_11 {
    //#11.1 Как устроены сети: Теория

    //План урока
    //Место сетей в процессе обеспечения качества и связанные с ними задачи
    //Основные понятия сетей
    //Обзор процессов, участвующих в передаче данных


    //Введение

    //Вычислительные сети и обеспечение качества
    //Хорошему QA-инженеру необходимо знать принципы устройства сетей и уметь с ними работать по следующим причинам:

    //Большинство современных приложений являются сетевыми (то есть работают с сетями):
    //мобильные приложения, электронная коммерция (англ. e-commerce), банковские приложения, средства удалённого доступа и VPN, игры.
    //Для эффективного тестирования сетевых приложений нужно немалое количество знаний и навыков в области сетей.

    //Зачастую лишь 20 % кода сетевого приложения составляет прикладная логика, а остальные 80 % — это обработчики ошибок,
    //поскольку передача данных через сети даже в наши дни сопряжена с проблемами надёжности и безопасности.

    //Хотя дефекты, связанные с работой в сетях, встречаются не так часто, как,
    //например, связанные с интерфейсом, их появление довольно болезненно и критично.
    //Их трудно обнаружить и локализовать, не обладая соответствующими навыками.

    //Такие навыки крайне полезны, но (к сожалению для ИТ-индустрии) редко встречаются среди специалистов обеспечения качества.
    //Поэтому они могут стать вашим преимуществом на рынке труда.

    //В отличие от знаний, специфичных для операционных систем (например, Windows или Linux),
    //принципы работы сетей и соответствующие навыки и инструменты
    //по большей части являются общими для любого современного устройства от смартфонов до суперкомпьютеров.

    //Получение навыков работы с сетями — прекрасная инвестиция,
    //так как изменения здесь происходят очень медленно (по крайней мере, это касается базовых принципов).
    //Например, семейство протоколов TCP/IP v4 было представлено в 80-х и широко используется по сей день — спустя 40 лет.
    //Семейство протоколов IPv6 представлено в 1995 году и до сих пор не проникло в повседневную жизнь.


    //Для каких именно задач инженер по обеспечению качества будет применять эти навыки и знания:

    //Поиск и локализация дефектов программного обеспечения (ПО), которые связаны с работой с сетями.

    //Переконфигурация и (или) развёртывание тестового окружения для выполнения тестов.

    //Качественное проектирование тестов и проведение тестирования сетевой части приложения.

    //Улучшение документации по тестированию в случае, когда необходимо добавить сведения, касающиеся сетей.


    //В ходе первого урока мы кратко поговорим о том, как работает сеть Интернет.

    //Давайте посмотрим, что происходит, когда в браузере открывается веб-сайт
    //https://example.com
    //(это реально существующий сайт, часто используемый в качестве примера).


    //Подготовка рабочего окружения

    //Задания из этого раздела учебника можно выполнить на компьютере под управлением Windows либо macOS.


    //Основные понятия сетей

    //В первую очередь необходимо познакомиться с двумя важными понятиями:
    //https://mentorpiece.org/wp-content/uploads/articulate_uploads/the-100-year-qa-textbook-яussian-edition-1-0-2-xapi-QP0TAWc6/assets/CIVeAXsw2nxfJGvG_jLPz0XYUMeR4Xggv.png
    //Модель клиент-сервер

    //Большая часть данных в Интернете передается между двумя узлами.
    //Первый узел — это программа, которая хочет получить данные, называемая "клиент".
    //В нашем примере клиентом является веб-браузер.
    //Когда вы открываете веб-сайт, браузер пытается подключиться к этому сайту и запросить данные.

    //Второй узел — это сервер, программа, обрабатывающая ваш запрос (здесь и далее в этой главе под сервером мы понимаем программу,
    //а не специальный компьютер, отличающийся от вашего ноутбука или настолького ПК).

    //https://mentorpiece.org/wp-content/uploads/articulate_uploads/the-100-year-qa-textbook-яussian-edition-1-0-2-xapi-QP0TAWc6/assets/eGkQtg7KG0BT99N5_HwskMZIlCsIvdYYI.png
    //HTTP как пример протокола
    //Протоколы

    //Для общения с кем-либо мы должны разговаривать с собеседником на одном языке.
    //В области сетей такие языки называются протоколами.
    //Они устанавливают правила общения между компьютерами, чтобы те могли отправлять и принимать данные.
    //Существует множество протоколов различного назначения.
    //Большинство из них формально описано в общедоступных документах RFC (Request for Comments — предложение для обсуждения).
    //Например, при подключении по Wi-Fi задействуется протокол 802.11.
    //Также вы используете протоколы HTTP и HTTPS каждый раз, когда открываете веб-сайты.
    //С помощью этих протоколов браузер связывается с удалённым веб-сервером.

    //При выполнении нашего примера браузер отправляет серверу с адресом example.com сообщение, похожее на следующее:
    //«передай мне содержимое главной страницы сайта example.com».
    //Такой тип запроса называется GET - показать содержимое чего-либо.
    //Это не единственный тип HTTP-запроса, но для наших текущих целей его пока достаточно.
    //В случае успешного выполнения запроса сервер ответит специальным кодом - 200 (успех, ОК).
    //Другие коды ответов сервера также будут рассмотрены в следующих модулях.


    //Практическое упражнение 1

    //Откройте сайт example.com в браузере, затем откройте терминал и попробуйте "пообщаться"
    //с веб-сервером напрямую с помощью инструментов командной строки.

    //Вы можете включить Telnet Client с помощью классической панели управления.
    //Вы можете использовать его, добавляя или удаляя дополнительные функции других пользователей в Windows.

    //Как включить Telnet-клиент с помощью панели управления:
    //1 - Нажмите Win + R, чтобы открыть Выполнить.

    //2 - Введите control и нажмите OK, чтобы открыть панель управления.

    //3 - В панели управления нажмите на Удаление программы в разделе Программы и компоненты.

    //4 - На левой панели нажмите на "Включить или выключить функцию Windows".

    //5 - В диалоговом окне "Функции Windows" прокрутите вниз и выберите Клиент Telnet.

    //6 - Нажмите OK и дождитесь установки функции.
    //После установки перезагрузите компьютер, чтобы применить изменения и включить функцию.




}
